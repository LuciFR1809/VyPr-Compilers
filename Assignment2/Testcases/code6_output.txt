Line: 1, Token: keyword, Lexeme: import
Line: 1, Token: identifier, Lexeme: module
Line: 1, Token: delimiter, Lexeme: ;
Line: 3, Token: keyword, Lexeme: int
Line: 3, Token: identifier, Lexeme: main
Line: 3, Token: delimiter, Lexeme: (
Line: 3, Token: keyword, Lexeme: int
Line: 3, Token: identifier, Lexeme: y
Line: 3, Token: delimiter, Lexeme: )
Line: 3, Token: delimiter, Lexeme: {
Line: 4, Token: keyword, Lexeme: string
Line: 4, Token: identifier, Lexeme: yt
Line: 4, Token: operator, Lexeme: =
Line: 4, Token: string literal, Lexeme: "What is wrong with you?"
Line: 4, Token: delimiter, Lexeme: ;
Line: 5, Token: identifier, Lexeme: print
Line: 5, Token: delimiter, Lexeme: (
Line: 5, Token: identifier, Lexeme: yt
Line: 5, Token: delimiter, Lexeme: )
Line: 5, Token: delimiter, Lexeme: ;
Line: 6, Token: keyword, Lexeme: int
Line: 6, Token: identifier, Lexeme: y
Line: 6, Token: operator, Lexeme: =
Line: 6, Token: integer_literal, Lexeme: 10
Line: 6, Token: delimiter, Lexeme: ;
Line: 7, Token: identifier, Lexeme: print
Line: 7, Token: delimiter, Lexeme: (
Line: 7, Token: identifier, Lexeme: fun
Line: 7, Token: delimiter, Lexeme: (
Line: 7, Token: identifier, Lexeme: yt
Line: 7, Token: delimiter, Lexeme: )
Line: 7, Token: delimiter, Lexeme: )
Line: 7, Token: delimiter, Lexeme: ;
Line: 8, Token: delimiter, Lexeme: }
