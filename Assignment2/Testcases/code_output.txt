Line: 1, Token: keyword, Lexeme: import
Line: 1, Token: identifier, Lexeme: modulename
Line: 1, Token: delimiter, Lexeme: ;
Line: 2, Token: keyword, Lexeme: int
Line: 2, Token: identifier, Lexeme: main
Line: 2, Token: delimiter, Lexeme: (
Line: 2, Token: delimiter, Lexeme: )
Line: 3, Token: delimiter, Lexeme: {
Line: 4, Token: keyword, Lexeme: int
Line: 4, Token: identifier, Lexeme: y
Line: 4, Token: operator, Lexeme: =
Line: 4, Token: integer_literal, Lexeme: 0
Line: 4, Token: delimiter, Lexeme: ;
Line: 5, Token: identifier, Lexeme: y
Line: 5, Token: operator, Lexeme: =
Line: 5, Token: identifier, Lexeme: fun
Line: 5, Token: delimiter, Lexeme: (
Line: 5, Token: identifier, Lexeme: y
Line: 5, Token: delimiter, Lexeme: )
Line: 5, Token: delimiter, Lexeme: ;
Line: 6, Token: keyword, Lexeme: switch
Line: 6, Token: delimiter, Lexeme: (
Line: 6, Token: identifier, Lexeme: y
Line: 6, Token: delimiter, Lexeme: )
Line: 6, Token: delimiter, Lexeme: {
Line: 7, Token: keyword, Lexeme: case
Line: 7, Token: integer_literal, Lexeme: 1
Line: 7, Token: delimiter, Lexeme: :
Line: 7, Token: identifier, Lexeme: print
Line: 7, Token: delimiter, Lexeme: (
Line: 7, Token: string literal, Lexeme: "hello world"
Line: 7, Token: delimiter, Lexeme: )
Line: 7, Token: delimiter, Lexeme: ;
Line: 8, Token: keyword, Lexeme: case
Line: 8, Token: integer_literal, Lexeme: 2
Line: 8, Token: delimiter, Lexeme: :
Line: 8, Token: identifier, Lexeme: print
Line: 8, Token: delimiter, Lexeme: (
Line: 8, Token: string literal, Lexeme: "hello boys and girls"
Line: 8, Token: delimiter, Lexeme: )
Line: 8, Token: delimiter, Lexeme: ;
Line: 9, Token: keyword, Lexeme: default
Line: 9, Token: delimiter, Lexeme: :
Line: 9, Token: identifier, Lexeme: print
Line: 9, Token: delimiter, Lexeme: (
Line: 9, Token: string literal, Lexeme: "hello nation"
Line: 9, Token: delimiter, Lexeme: )
Line: 9, Token: delimiter, Lexeme: ;
Line: 10, Token: delimiter, Lexeme: }
Line: 11, Token: keyword, Lexeme: return
Line: 11, Token: integer_literal, Lexeme: 0
Line: 11, Token: delimiter, Lexeme: ;
Line: 12, Token: delimiter, Lexeme: }
