S -> IMPORT_LIST FUNC_LIST
IMPORT_LIST -> IMPORT_STMT IMPORT_LIST
IMPORT_LIST -> ''
IMPORT_STMT -> import ID ;
FUNC_LIST -> FUNC FUNC_LIST
FUNC_LIST -> ''
FUNC -> RET_TYPE ID ( PARAMS ) { STMT_LIST }
RET_TYPE -> DATA_TYPE
RET_TYPE -> void
DATA_TYPE -> int
DATA_TYPE -> float
DATA_TYPE -> boolean
DATA_TYPE -> char
DATA_TYPE -> string
PARAMS -> DECL_LIST
PARAMS -> ''
DECL_LIST -> DECL_SINGLE DECL_LIST'
DECL_SINGLE -> int ID
DECL_SINGLE -> float ID
DECL_SINGLE -> boolean ID
DECL_SINGLE -> char ID
DECL_SINGLE -> string ID
STMT_LIST -> STMT STMT_LIST
STMT_LIST -> ''
STMT -> SINGLE_STMT ;
STMT -> BLOCK
STMT -> { STMT_LIST }
SINGLE_STMT -> DECL_STMT
SINGLE_STMT -> ASSN_STMT
SINGLE_STMT -> OUT_STMT
SINGLE_STMT -> RET_STMT
SINGLE_STMT -> INC_STMT
SINGLE_STMT -> FLOW_STMT
DECL_STMT -> int ID_ASSN_LIST
DECL_STMT -> float ID_ASSN_LIST
DECL_STMT -> boolean ID_ASSN_LIST
DECL_STMT -> char ID_ASSN_LIST
DECL_STMT -> string ID_ASSN_LIST
ID_ASSN_LIST -> ASSN_STMT ID_ASSN_LIST''
ID_ASSN_LIST -> ID ID_ASSN_LIST'
ASSN_STMT -> ID = OUT_STMT
OUT_STMT -> OUT_STMT_1 OUT_STMT'
COMP_OP_1 -> &&
COMP_OP_1 -> ||
OUT_STMT_1 -> OUT_STMT_2 OUT_STMT_1'
COMP_OP_2 -> ==
COMP_OP_2 -> <=
COMP_OP_2 -> >=
COMP_OP_2 -> !=
COMP_OP_2 -> <
COMP_OP_2 -> >
OUT_STMT_2 -> OUT_STMT_3 OUT_STMT_2'
ARITH_OP_1 -> +
ARITH_OP_1 -> -
OUT_STMT_3 -> OUT_STMT_4 OUT_STMT_3'
ARITH_OP_2 -> *
ARITH_OP_2 -> /
ARITH_OP_2 -> %
OUT_STMT_4 -> OUT_STMT_5 OUT_STMT_4'
ARITH_OP_3 -> <<
ARITH_OP_3 -> >>
OUT_STMT_5 -> OUT_STMT_6
OUT_STMT_5 -> ! OUT_STMT_6
OUT_STMT_6 -> ( OUT_STMT )
OUT_STMT_6 -> ID
OUT_STMT_6 -> CONST
OUT_STMT_6 -> FUNC_CALL
CONST -> STR_LIT
CONST -> INT_LIT
CONST -> FLT_LIT
CONST -> BOOL_LIT
BOOL_LIT -> true
BOOL_LIT -> false
FUNC_CALL -> ID ( FUNC_CALL'
ARG_LIST -> ID ARG_LIST''''''''''''
ARG_LIST -> false OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''''''''''
ARG_LIST -> true OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''''''
ARG_LIST -> FLT_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''''''''
ARG_LIST -> INT_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''''
ARG_LIST -> STR_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''''''
ARG_LIST -> ! OUT_STMT_6 OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''''
ARG_LIST -> ( OUT_STMT ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''
RET_STMT -> return OUT_STMT
INC_STMT -> ID INC_OP OUT_STMT
INC_OP -> +=
INC_OP -> -=
INC_OP -> *=
INC_OP -> /=
INC_OP -> %=
FLOW_STMT -> break
FLOW_STMT -> continue
BLOCK -> COND_BLOCK
BLOCK -> LOOP_BLOCK
COND_BLOCK -> if ( OUT_STMT ) STMT COND_BLOCK'
COND_BLOCK -> switch ( OUT_STMT ) { CASE_LIST }
CASE_LIST -> SINGLE_CASE CASE_LIST
CASE_LIST -> DEFAULT_CASE
CASE_LIST -> ''
SINGLE_CASE -> case CONST : STMT_LIST
DEFAULT_CASE -> default : STMT_LIST
LOOP_BLOCK -> while ( OUT_STMT ) STMT
LOOP_BLOCK -> for ( DECL_STMT ; OUT_STMT ; INC_STMT ) STMT
LOOP_BLOCK -> do STMT while ( OUT_STMT ) ;
OUT_STMT' -> && OUT_STMT_1 OUT_STMT'
OUT_STMT' -> || OUT_STMT_1 OUT_STMT'
OUT_STMT' -> ''
OUT_STMT_1' -> == OUT_STMT_2 OUT_STMT_1'
OUT_STMT_1' -> <= OUT_STMT_2 OUT_STMT_1'
OUT_STMT_1' -> >= OUT_STMT_2 OUT_STMT_1'
OUT_STMT_1' -> != OUT_STMT_2 OUT_STMT_1'
OUT_STMT_1' -> < OUT_STMT_2 OUT_STMT_1'
OUT_STMT_1' -> > OUT_STMT_2 OUT_STMT_1'
OUT_STMT_1' -> ''
OUT_STMT_2' -> + OUT_STMT_3 OUT_STMT_2'
OUT_STMT_2' -> - OUT_STMT_3 OUT_STMT_2'
OUT_STMT_2' -> ''
OUT_STMT_3' -> * OUT_STMT_4 OUT_STMT_3'
OUT_STMT_3' -> / OUT_STMT_4 OUT_STMT_3'
OUT_STMT_3' -> % OUT_STMT_4 OUT_STMT_3'
OUT_STMT_3' -> ''
OUT_STMT_4' -> << OUT_STMT_5 OUT_STMT_4'
OUT_STMT_4' -> >> OUT_STMT_5 OUT_STMT_4'
OUT_STMT_4' -> ''
DECL_LIST' -> ''
DECL_LIST' -> , DECL_LIST
ID_ASSN_LIST' -> ''
ID_ASSN_LIST' -> , ID_ASSN_LIST
ID_ASSN_LIST'' -> ''
ID_ASSN_LIST'' -> , ID_ASSN_LIST
FUNC_CALL' -> ID ARG_LIST'''''''''''' )
FUNC_CALL' -> false OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''''''' )
FUNC_CALL' -> true OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''''''''' )
FUNC_CALL' -> FLT_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''''' )
FUNC_CALL' -> INT_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''''''' )
FUNC_CALL' -> STR_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''' )
FUNC_CALL' -> ! OUT_STMT_6 OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''' )
FUNC_CALL' -> ( OUT_STMT ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'' )
FUNC_CALL' -> )
ARG_LIST' -> ''
ARG_LIST' -> , ARG_LIST
ARG_LIST'' -> ''
ARG_LIST'' -> , ARG_LIST
ARG_LIST''' -> ''
ARG_LIST''' -> , ARG_LIST
ARG_LIST'''' -> ''
ARG_LIST'''' -> , ARG_LIST
ARG_LIST''''' -> ''
ARG_LIST''''' -> , ARG_LIST
ARG_LIST'''''' -> ''
ARG_LIST'''''' -> , ARG_LIST
ARG_LIST''''''' -> ''
ARG_LIST''''''' -> , ARG_LIST
ARG_LIST'''''''' -> ''
ARG_LIST'''''''' -> , ARG_LIST
ARG_LIST''''''''' -> ''
ARG_LIST''''''''' -> , ARG_LIST
ARG_LIST'''''''''' -> ''
ARG_LIST'''''''''' -> , ARG_LIST
ARG_LIST''''''''''' -> ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''
ARG_LIST''''''''''' -> ID ARG_LIST'''''''''''' ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'
ARG_LIST''''''''''' -> false OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''''''' ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'
ARG_LIST''''''''''' -> true OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''''''''' ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'
ARG_LIST''''''''''' -> FLT_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''''' ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'
ARG_LIST''''''''''' -> INT_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST''''''' ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'
ARG_LIST''''''''''' -> STR_LIT OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''' ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'
ARG_LIST''''''''''' -> ! OUT_STMT_6 OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''' ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'
ARG_LIST''''''''''' -> ( OUT_STMT ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'' ) OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'
ARG_LIST'''''''''''' -> ( ARG_LIST'''''''''''
ARG_LIST'''''''''''' -> << OUT_STMT_5 OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''
ARG_LIST'''''''''''' -> >> OUT_STMT_5 OUT_STMT_4' OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''
ARG_LIST'''''''''''' -> OUT_STMT_3' OUT_STMT_2' OUT_STMT_1' OUT_STMT' ARG_LIST'''''
COND_BLOCK' -> ''
COND_BLOCK' -> else STMT
