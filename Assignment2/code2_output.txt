Line: 1, Token: import, Lexeme: import
Line: 1, Token: ID, Lexeme: x
Line: 1, Token: ;, Lexeme: ;
Line: 2, Token: import, Lexeme: import
Line: 2, Token: ID, Lexeme: y
Line: 2, Token: ;, Lexeme: ;
Line: 3, Token: import, Lexeme: import
Line: 3, Token: ID, Lexeme: z
Line: 5, Token: ID, Lexeme: init
Line: 5, Token: ID, Lexeme: main
Line: 5, Token: (, Lexeme: (
Line: 5, Token: ), Lexeme: )
Line: 5, Token: {, Lexeme: {
Line: 6, Token: import, Lexeme: import
Line: 6, Token: ID, Lexeme: t
Line: 7, Token: int, Lexeme: int
Line: 7, Token: ID, Lexeme: mul
Line: 7, Token: =, Lexeme: =
Line: 7, Token: INT_LIT, Lexeme: 1
Line: 7, Token: ;, Lexeme: ;
Line: 8, Token: for, Lexeme: for
Line: 8, Token: (, Lexeme: (
Line: 8, Token: int, Lexeme: int
Line: 8, Token: ID, Lexeme: i
Line: 8, Token: =, Lexeme: =
Line: 8, Token: INT_LIT, Lexeme: 1
Line: 8, Token: ;, Lexeme: ;
Line: 8, Token: ID, Lexeme: i
Line: 8, Token: <, Lexeme: <
Line: 8, Token: INT_LIT, Lexeme: 9
Line: 8, Token: ;, Lexeme: ;
Line: 8, Token: ID, Lexeme: i
Line: 8, Token: +, Lexeme: +
Line: 8, Token: +, Lexeme: +
Line: 8, Token: ), Lexeme: )
Line: 8, Token: {, Lexeme: {
Line: 9, Token: ID, Lexeme: mul
Line: 9, Token: =, Lexeme: =
Line: 9, Token: ID, Lexeme: mul
Line: 9, Token: *, Lexeme: *
Line: 9, Token: ID, Lexeme: i
Line: 9, Token: ;, Lexeme: ;
Line: 10, Token: }, Lexeme: }
Line: 11, Token: return, Lexeme: return
Line: 11, Token: ID, Lexeme: mul
Line: 11, Token: ;, Lexeme: ;
Line: 12, Token: }, Lexeme: }
